import { EventEmitter } from "events";
import { setJestState } from "../utils/jestState";

// üîî –≠–º–∏—Ç—Ç–µ—Ä —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤ (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
export const emailBus = new EventEmitter();

// –¢–∏–ø –ø–∏—Å—å–º–∞
type SentEmail = { to: string; subject: string; html: string };

// –ü–∞–º—è—Ç—å –¥–ª—è –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º (–¥–ª—è Jest / –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤)
const outbox: SentEmail[] = [];

// –û—á–∏—Å—Ç–∫–∞ outbox
export const clearOutbox = () => {
  outbox.length = 0;
};

// üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
export async function sendEmail(to: string, subject: string, html: string) {
  const sentEmail = { to, subject, html };
  outbox.push(sentEmail);

  // üîç –í—ã–≤–æ–¥ –ø–∏—Å—å–º–∞ –ø—Ä—è–º–æ –≤ –∫–æ–Ω—Å–æ–ª—å (–¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏)
  console.log("üìß EMAIL SENT =====================================");
  console.log("To:", to);
  console.log("Subject:", subject);
  console.log("HTML:\n", html);
  console.log("===================================================");

  // üß© –ò–∑–≤–ª–µ–∫–∞–µ–º code –∏–∑ ?code=... –∏–ª–∏ 6-–∑–Ω–∞—á–Ω–æ–≥–æ –∫–æ–¥–∞ –º–µ–∂–¥—É —Ç–µ–≥–∞–º–∏ <b>...</b>
  const codeMatch = html.match(/code=([^"']+)/) || html.match(/>(\d{6})</);
  if (codeMatch && codeMatch[1]) {
    setJestState("code", codeMatch[1]);
    console.log("‚úÖ Extracted confirmation code:", codeMatch[1]);
  } else {
    console.log("‚ö†Ô∏è Confirmation code not found in email HTML!");
  }

  // üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ –ø–∏—Å—å–º–µ (–¥–ª—è –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤)
  emailBus.emit("email:sent", sentEmail);

  return sentEmail;
}
